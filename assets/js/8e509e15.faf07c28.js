"use strict";(self.webpackChunksecure_vault_doc=self.webpackChunksecure_vault_doc||[]).push([[2421],{446:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"configure-backend/aspnetcore","title":".NET Core Integration","description":"Installation","source":"@site/docs/configure-backend/aspnetcore.md","sourceDirName":"configure-backend","slug":"/configure-backend/aspnetcore","permalink":"/docs/configure-backend/aspnetcore","draft":false,"unlisted":false,"editUrl":"https://github.com/abdoulrasheed/securevault/tree/main/secure-vault-doc/docs/configure-backend/aspnetcore.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Configure Backend","permalink":"/docs/category/configure-backend"},"next":{"title":"Django Integration","permalink":"/docs/configure-backend/django"}}');var o=t(4848),r=t(8453);const c={sidebar_position:1},a=".NET Core Integration",l={},s=[{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"appsettings.json",id:"appsettingsjson",level:3},{value:"Middleware Registration",id:"middleware-registration",level:2},{value:"Controller Protection",id:"controller-protection",level:2},{value:"Client-Side Integration",id:"client-side-integration",level:2},{value:"Advanced Security Features",id:"advanced-security-features",level:2},{value:"Custom Bot Detection",id:"custom-bot-detection",level:3},{value:"Logging and Monitoring",id:"logging-and-monitoring",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"net-core-integration",children:".NET Core Integration"})}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"dotnet add package SecureVault.Core\n"})}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(n.h3,{id:"appsettingsjson",children:"appsettings.json"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "SecureVault": {\n    "BotDetection": {\n      "Enabled": true,\n      "Threshold": 0.85,\n      "BlockOnDetection": true\n    },\n    "DeviceFingerprint": {\n      "Enabled": true,\n      "LockToDevice": true,\n      "MaxDeviceChanges": 2\n    },\n    "ChallengeResponse": {\n      "Enabled": true,\n      "KeyRotationInterval": "1h",\n      "Algorithm": "RSA-4096"\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"middleware-registration",children:"Middleware Registration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'public void ConfigureServices(IServiceCollection services)\n{\n    services.AddSecureVault(Configuration.GetSection("SecureVault"));\n}\n\npublic void Configure(IApplicationBuilder app)\n{\n    app.UseSecureVault();\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"controller-protection",children:"Controller Protection"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"[SecureEndpoint(BotDetection = true, DeviceLock = true)]\npublic IActionResult ProtectedAction()\n{\n    // Secured endpoint logic\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"client-side-integration",children:"Client-Side Integration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"public class SecuredHttpClient\n{\n    private readonly HttpClient _client;\n\n    public SecuredHttpClient(SecureVaultClient secureVaultClient)\n    {\n        _client = secureVaultClient.CreateClient();\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"advanced-security-features",children:"Advanced Security Features"}),"\n",(0,o.jsx)(n.h3,{id:"custom-bot-detection",children:"Custom Bot Detection"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"public class CustomBotDetector : IBotDetector\n{\n    public async Task<double> AnalyzeAsync(HttpContext context)\n    {\n        // Implement custom bot detection logic\n        return botScore;\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"logging-and-monitoring",children:"Logging and Monitoring"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"services.AddLogging(configure => \n{\n    configure.AddSecureVaultLogging();\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);