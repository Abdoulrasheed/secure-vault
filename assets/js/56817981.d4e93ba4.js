"use strict";(self.webpackChunksecure_vault_doc=self.webpackChunksecure_vault_doc||[]).push([[8006],{9048:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"clients/graphql","title":"GraphQL Clients Integration","description":"Installation","source":"@site/docs/clients/graphql.md","sourceDirName":"clients","slug":"/clients/graphql","permalink":"/secure-vault/docs/clients/graphql","draft":false,"unlisted":false,"editUrl":"https://github.com/abdoulrasheed/securevault/tree/main/secure-vault-doc/docs/clients/graphql.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Fetch API Integration","permalink":"/secure-vault/docs/clients/fetch"},"next":{"title":"Configure Options","permalink":"/secure-vault/docs/category/configure-options"}}');var a=t(4848),i=t(8453);const o={sidebar_position:4},l="GraphQL Clients Integration",s={},c=[{value:"Installation",id:"installation",level:2},{value:"Apollo Client Configuration",id:"apollo-client-configuration",level:2},{value:"Relay Modern Integration",id:"relay-modern-integration",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"graphql-clients-integration",children:"GraphQL Clients Integration"})}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install securevault-graphql\n"})}),"\n",(0,a.jsx)(n.h2,{id:"apollo-client-configuration",children:"Apollo Client Configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import { SecureVaultLink } from 'securevault-graphql';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst secureVaultLink = new SecureVaultLink({\n  botDetection: true,\n  deviceFingerprint: {\n    enabled: true,\n    lockToDevice: true\n  }\n});\n\nconst client = new ApolloClient({\n  link: secureVaultLink,\n  cache: new InMemoryCache()\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"relay-modern-integration",children:"Relay Modern Integration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"import { SecureVaultNetwork } from 'securevault-graphql';\n\nconst network = SecureVaultNetwork.create({\n  fetchQuery: async (operation, variables) => {\n    return await securedFetch('/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: operation.text,\n        variables\n      })\n    });\n  },\n  securityOptions: {\n    challengeResponse: {\n      enabled: true\n    }\n  }\n});\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);